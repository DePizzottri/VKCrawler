akka {
  loggers = ["akka.event.Logging$DefaultLogger"]
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"
  akka.actor.debug {
//      receive = on
//      lifecycle = on
  }

  extensions = ["kamon.metric.Metrics", "kamon.datadog.Datadog",
                "kamon.system.SystemMetrics"]

//  actor {
//    deployment {
//      /user {
//        remote = "akka.tcp://bfs-system@127.0.0.1:2553"
//      }
//      /graph {
//        remote = "akka.tcp://bfs-system@192.168.1.161:2552"
//      }
//    }
//  }

  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "192.168.1.9"
      port = 2552
    }
  }
}

bfs.prototype2 {
  
}

kamon {
  metrics {
    filters = [
      {
        akka-actor {
          includes = [ "**" ]
          excludes = [ ]
        }
      },
      {
        akka-router {
          includes = [ "**" ]
          excludes = [ ]
        }
      },
      {
        akka-dispatcher {
          includes = [ "**" ]
          excludes = [ ]
        }
      }
    ]
  }

  datadog {
    hostname = "127.0.0.1"
    port = 8125

    flush-interval = 1 second

    max-packet-size = 1024 bytes

    report-system-metrics = true

    includes {
      actor       = [ "*" ]
      trace       = [ "*" ]
      dispatcher  = [ "*" ]
    }

    application-name = "bfs_kamon_test"
  }
  disable-aspectj-weaver-missing-error = no
}

kamon.datadog {
  subscriptions {
    histogram       = [ "**" ]
    min-max-counter = [ "**" ]
    gauge           = [ "**" ]
    counter         = [ "**" ]
    trace           = [ "**" ]
    trace-segment   = [ "**" ]
    akka-actor      = [ "**" ]
    akka-dispatcher = [ "**" ]
    akka-router     = [ "**" ]
    system-metric   = [ "**" ]
    http-server     = [ "**" ]
  }
}
