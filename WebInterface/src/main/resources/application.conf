akka {
  loggers = ["akka.event.Logging$DefaultLogger"]
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"
  actor {
    provider = "akka.remote.RemoteActorRefProvider"
   }
   remote {
     enabled-transports = ["akka.remote.netty.tcp"]
     //log-sent-messages = on
     //log-received-messages = on
     netty.tcp {
       hostname = "127.0.0.1"
       port = 5151
       maximum-frame-size = 512000b
     }
   }
  extensions = ["kamon.statsd.StatsD"]
}

WEB {
  host = 192.168.1.9//localhost //"0.0.0.0" //- bind to all
  port = 8080
}

spray.can.server.registration-timeout = 2s

queueactor = "akka.tcp://BFSSystem@127.0.0.1:5150/user/QueueActor"
exchangeactor = "akka.tcp://BFSSystem@127.0.0.1:5150/user/ExchangeActor"

# Kamon Metrics
# ~~~~~~~~~~~~~~

kamon {
  metrics {

    filters = [
      {
        actor {
          includes = [ "user/*" ]
          excludes = [ "system/*" ]
        }
      },
      {
        trace {
          includes = [ "*" ]
          excludes = []
        }
      }
    ]
  }

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  statsd {
    # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
    # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
    hostname = "52.20.134.158"
    port = 8125

    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metrics.tick-interval setting.
    # flush-interval = 1 second

    # Max packet size for UDP metrics data sent to StatsD.
    max-packet-size = 1024 bytes

    # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
    # collection for your desired entities must be activated under the kamon.metrics.filters settings.
    includes {
      actor       = [ "*" ]
      trace       = [ "*" ]
      dispatcher  = [ "*" ]
    }

    simple-metric-key-generator {
      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      application = "VK WEB"
    }
  }
}
