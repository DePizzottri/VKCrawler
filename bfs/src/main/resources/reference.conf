reliable-messaging {
  snapshot-interval = 1m
  unconfirmed-interval = 5m
}

crawl-name = vk_all

bfs {
  graphactor = /user/GraphActor
  usedactor = /user/UsedActor
  exchangeactor = /user/ExchangeActor
}

exchange {
  rabbitmq {
    host = localhost
    username = vkcrawler
    password = vkcrawler
    exchange_name = ${crawl-name}
  }
  bfsactor = /user/BFSActor
  queueactor = /user/QueueActor
}

graph {
  mongodb {
    host = 192.168.1.5
    port = 27017
    database = ${crawl-name}
    friends = friends
  }

  upsert = true
}

queue {
  mongodb {
    uri = "mongodb://192.168.1.4:27017,192.168.1.5:27017/"
    # host = localhost
    # port = 27017
    database = ${crawl-name}
    queue = queue
  }

  taskSize = 20
  batchSize = 5000
}

used {
  redis {
    host = localhost
    port = 6379
    setName = ${crawl-name}
    timeout = 10
  }
}

akka.persistence.journal.plugin = "akka-contrib-mongodb-persistence-journal"
akka.persistence.snapshot-store.plugin = "akka-contrib-mongodb-persistence-snapshot"
akka.contrib.persistence.mongodb.mongo.mongouri = "mongodb://localhost:27017/"${crawl-name}

akka.contrib.persistence.mongodb.mongo.journal-collection = "persistent_journal"
akka.contrib.persistence.mongodb.mongo.journal-index = "journal_index"
akka.contrib.persistence.mongodb.mongo.snaps-collection = "persistent_snapshots"
akka.contrib.persistence.mongodb.mongo.snaps-index = "snaps_index"
akka.contrib.persistence.mongodb.mongo.journal-write-concern = "Acknowledged"
