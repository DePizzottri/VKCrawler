akka {
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"

  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    //log-sent-messages = on
    //log-received-messages = on
    netty.tcp {
      hostname = "127.0.0.1"
      port = 5150
      maximum-frame-size = 512000b
    }
  }

  # extensions = ["kamon.akka.Akka", "kamon.statsd.StatsD"]
}

# Kamon Metrics
# ~~~~~~~~~~~~~~

kamon {
  metric {

    tick-interval = 10 seconds

    track-unmatched-entities = yes

    filters {
      akka-actor {
        includes = ["*/user/*"]
        excludes = [ "*/system/**", "*/user/IO-**", "*kamon*" ]
      }

      akka-router {
        includes = ["*/user/*"]
        excludes = []
      }

      akka-dispatcher {
        includes = ["*/user/*"]
        excludes = []
      }

      trace {
        includes = [ "**" ]
        excludes = [ ]
      }
    }
  }

  statsd {
    hostname = "52.20.134.158"
    port = 8125

    flush-interval = 10 seconds

    max-packet-size = 1024 bytes

    # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
    # collection for your desired entities must be activated under the kamon.metrics.filters settings.
    subscriptions {
      histogram       = [ "**" ]
      min-max-counter = [ "**" ]
      gauge           = [ "**" ]
      counter         = [ "**" ]
      trace           = [ "**" ]
      trace-segment   = [ "**" ]
      akka-actor      = [ "**" ]
      akka-dispatcher = [ "**" ]
      akka-router     = [ "**" ]
      system-metric   = [ "**" ]
      http-server     = [ "**" ]
    }

    simple-metric-key-generator {
      application = "VKBFS"
    }
  }
}
